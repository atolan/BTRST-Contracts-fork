{
  "address": "0x281E9a847338e77Ad834C68b0C42552c83d7d9Fb",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "governor_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "member",
          "type": "string"
        }
      ],
      "name": "FoundationMemberAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "category",
          "type": "string"
        }
      ],
      "name": "MarketplaceCategoryAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "oldFee",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "newFee",
          "type": "uint8"
        }
      ],
      "name": "MarketplaceFeeChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GOVERNOR_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "member",
          "type": "string"
        }
      ],
      "name": "addFoundationMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "category",
          "type": "string"
        }
      ],
      "name": "addMarketplaceCategory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMarketplaceCategories",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMemberships",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marketplaceFee",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "fee",
          "type": "uint8"
        }
      ],
      "name": "setMarketplaceFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x2a9be6f5458010edf2dae87bccfba71c04630d8772c709e6e6e3218ea4d228c7",
  "receipt": {
    "to": null,
    "from": "0xE1F43a543fAe801543A6916C85482F6Ed37F52ae",
    "contractAddress": "0x281E9a847338e77Ad834C68b0C42552c83d7d9Fb",
    "transactionIndex": 268,
    "gasUsed": "1504068",
    "logsBloom": "0x
    "blockHash": "0xbcb0db9ba1265e7606ec91dcca0a2d9ae084ad327c960c207ca4258220b62e61",
    "transactionHash": "0x2a9be6f5458010edf2dae87bccfba71c04630d8772c709e6e6e3218ea4d228c7",
    "logs": [
      {
        "transactionIndex": 268,
        "blockNumber": 12998135,
        "transactionHash": "0x2a9be6f5458010edf2dae87bccfba71c04630d8772c709e6e6e3218ea4d228c7",
        "address": "0x281E9a847338e77Ad834C68b0C42552c83d7d9Fb",
        "topics": [
          "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
          "0x7935bd0ae54bc31f548c14dba4d37c5c64b3f8ca900cb468fb8abd54d5894f55",
          "0x000000000000000000000000b6f1f016175588a049fda12491cf3686de33990b",
          "0x000000000000000000000000e1f43a543fae801543a6916c85482f6ed37f52ae"
        ],
        "data": "0x",
        "logIndex": 540,
        "blockHash": "0xbcb0db9ba1265e7606ec91dcca0a2d9ae084ad327c960c207ca4258220b62e61"
      }
    ],
    "blockNumber": 12998135,
    "cumulativeGasUsed": "28227031",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xb6f1F016175588a049fDA12491cF3686De33990B"
  ],
  "solcInputHash": "bbbf276587a147dc3e1252ab6d1a4472",
  "metadata": "{\"compiler\":{\"version\":\"0.6.7+commit.b8d736ae\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"governor_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"member\",\"type\":\"string\"}],\"name\":\"FoundationMemberAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"}],\"name\":\"MarketplaceCategoryAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"oldFee\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"newFee\",\"type\":\"uint8\"}],\"name\":\"MarketplaceFeeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GOVERNOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"member\",\"type\":\"string\"}],\"name\":\"addFoundationMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"}],\"name\":\"addMarketplaceCategory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMarketplaceCategories\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMemberships\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketplaceFee\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"fee\",\"type\":\"uint8\"}],\"name\":\"setMarketplaceFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}.     * To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive.     * Role bearers are not sorted in any particular way, and their ordering may change at any point.     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`.     * If `account` had not been already granted `role`, emits a {RoleGranted} event.     * Requirements:     * - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account.     * Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced).     * If the calling account had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`.     * If `account` had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must have ``role``'s admin role.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/GovernanceDecisions.sol\":\"GovernanceDecisions\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"../utils/EnumerableSet.sol\\\";\\nimport \\\"../utils/Address.sol\\\";\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it.\\n */\\nabstract contract AccessControl is Context {\\n    using EnumerableSet for EnumerableSet.AddressSet;\\n    using Address for address;\\n\\n    struct RoleData {\\n        EnumerableSet.AddressSet members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping (bytes32 => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view returns (bool) {\\n        return _roles[role].members.contains(account);\\n    }\\n\\n    /**\\n     * @dev Returns the number of accounts that have `role`. Can be used\\n     * together with {getRoleMember} to enumerate all bearers of a role.\\n     */\\n    function getRoleMemberCount(bytes32 role) public view returns (uint256) {\\n        return _roles[role].members.length();\\n    }\\n\\n    /**\\n     * @dev Returns one of the accounts that have `role`. `index` must be a\\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\\n     *\\n     * Role bearers are not sorted in any particular way, and their ordering may\\n     * change at any point.\\n     *\\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\\n     * you perform all queries on the same block. See the following\\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\\n     * for more information.\\n     */\\n    function getRoleMember(bytes32 role, uint256 index) public view returns (address) {\\n        return _roles[role].members.at(index);\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual {\\n        require(hasRole(_roles[role].adminRole, _msgSender()), \\\"AccessControl: sender must be an admin to grant\\\");\\n\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual {\\n        require(hasRole(_roles[role].adminRole, _msgSender()), \\\"AccessControl: sender must be an admin to revoke\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) public virtual {\\n        require(account == _msgSender(), \\\"AccessControl: can only renounce roles for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event. Note that unlike {grantRole}, this function doesn't perform any\\n     * checks on the calling account.\\n     *\\n     * [WARNING]\\n     * ====\\n     * This function should only be called from the constructor when setting\\n     * up the initial roles for the system.\\n     *\\n     * Using this function in any other way is effectively circumventing the admin\\n     * system imposed by {AccessControl}.\\n     * ====\\n     */\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        emit RoleAdminChanged(role, _roles[role].adminRole, adminRole);\\n        _roles[role].adminRole = adminRole;\\n    }\\n\\n    function _grantRole(bytes32 role, address account) private {\\n        if (_roles[role].members.add(account)) {\\n            emit RoleGranted(role, account, _msgSender());\\n        }\\n    }\\n\\n    function _revokeRole(bytes32 role, address account) private {\\n        if (_roles[role].members.remove(account)) {\\n            emit RoleRevoked(role, account, _msgSender());\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x4fc155a2f7837603d69a13cfa481eb5e7f5e02cb77e2ec9edbac30986db37988\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.2 <0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\"},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping (bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) { // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            // When the value to delete is the last one, the swap operation is unnecessary. However, since this occurs\\n            // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement.\\n\\n            bytes32 lastvalue = set._values[lastIndex];\\n\\n            // Move the last value to the index where the value to delete is\\n            set._values[toDeleteIndex] = lastvalue;\\n            // Update the index for the moved value\\n            set._indexes[lastvalue] = toDeleteIndex + 1; // All indexes are 1-based\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        require(set._values.length > index, \\\"EnumerableSet: index out of bounds\\\");\\n        return set._values[index];\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n}\\n\",\"keccak256\":\"0x1562cd9922fbf739edfb979f506809e2743789cbde3177515542161c3d04b164\"},\"contracts/GovernanceDecisions.sol\":{\"content\":\"pragma solidity ^0.6.7;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"@openzeppelin/contracts/access/AccessControl.sol\\\";\\n\\ncontract GovernanceDecisions is AccessControl {\\n\\n    bytes32 public constant GOVERNOR_ROLE = keccak256(\\\"GOVERNOR_ROLE\\\");\\n\\n    uint8 public marketplaceFee;\\n    string[] private marketplaceCategories;\\n    string[] private foundationMemberships;\\n\\n    event MarketplaceFeeChanged(uint8 oldFee, uint8 newFee);\\n    event MarketplaceCategoryAdded(string category);\\n    event FoundationMemberAdded(string member);\\n\\n    constructor(address governor_) public {\\n        _setupRole(GOVERNOR_ROLE, governor_);\\n        marketplaceFee = 10; // set default marketplace fee\\n    }\\n\\n    function setMarketplaceFee(uint8 fee) external {\\n        require(hasRole(GOVERNOR_ROLE, msg.sender), \\\"GovernanceDecisions::setMarketplaceFee ACCESS FORBIDDEN\\\");\\n        require(fee < 100, \\\"GovernanceDecisions::setMarketplaceFee fee must be less than 100\\\");\\n\\n        uint8 oldFee;\\n        oldFee = marketplaceFee;\\n        marketplaceFee = fee;\\n        emit MarketplaceFeeChanged(oldFee, marketplaceFee);\\n    }\\n\\n    function addMarketplaceCategory(string calldata category) external {\\n        require(hasRole(GOVERNOR_ROLE, msg.sender), \\\"GovernanceDecisions::addMarketplaceCategory ACCESS FORBIDDEN\\\");\\n\\n        marketplaceCategories.push(category);\\n        emit MarketplaceCategoryAdded(category);\\n    }\\n\\n    function getMarketplaceCategories() public view returns (string[] memory) {\\n        return marketplaceCategories;\\n    }\\n\\n    function addFoundationMember(string calldata member) external {\\n        require(hasRole(GOVERNOR_ROLE, msg.sender), \\\"GovernanceDecisions::addFoundationMember ACCESS FORBIDDEN\\\");\\n\\n        foundationMemberships.push(member);\\n        emit FoundationMemberAdded(member);\\n    }\\n\\n    function getMemberships() public view returns (string[] memory) {\\n        return foundationMemberships;\\n    }\\n}\\n\",\"keccak256\":\"0x2708c764ec34162df54e9f73d345318e1955adb868f15c3019d98abd25e7be7d\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001b9438038062001b9483398181016040528101906200003791906200022e565b6200005e60405162000049906200029c565b6040518091039020826200008160201b60201c565b600a600160006101000a81548160ff021916908360ff160217905550506200030c565b6200009382826200009760201b60201c565b5050565b620000c5816000808581526020019081526020016000206000016200013a60201b62000b631790919060201c565b156200013657620000db6200017260201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b60006200016a836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6200017a60201b60201c565b905092915050565b600033905090565b60006200018e8383620001f460201b60201c565b620001e9578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050620001ee565b600090505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b6000815190506200022881620002f2565b92915050565b6000602082840312156200024157600080fd5b6000620002518482850162000217565b91505092915050565b600062000269600d83620002b3565b91507f474f5645524e4f525f524f4c45000000000000000000000000000000000000006000830152600d82019050919050565b6000620002a9826200025a565b9150819050919050565b600081905092915050565b6000620002cb82620002d2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620002fd81620002be565b81146200030957600080fd5b50565b611878806200031c6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80637840c6a411610097578063ca15c87311610066578063ca15c87314610272578063ccc57490146102a2578063cd80dc8d146102c0578063d547741f146102dc576100f5565b80637840c6a4146101d65780639010d07c146101f457806391d1485414610224578063a217fddf14610254576100f5565b806336568abe116100d357806336568abe146101625780634320a9881461017e5780636a1669641461019a57806375945ce8146101b8576100f5565b80631c55b8f8146100fa578063248a9ca3146101165780632f2ff15d14610146575b600080fd5b610114600480360381019061010f9190610fe5565b6102f8565b005b610130600480360381019061012b9190610eff565b610415565b60405161013d9190611525565b60405180910390f35b610160600480360381019061015b9190610f28565b610434565b005b61017c60048036038101906101779190610f28565b6104a7565b005b61019860048036038101906101939190610fa0565b61052a565b005b6101a2610601565b6040516101af919061167f565b60405180910390f35b6101c0610614565b6040516101cd91906114e8565b60405180910390f35b6101de6106fd565b6040516101eb91906114e8565b60405180910390f35b61020e60048036038101906102099190610f64565b6107e6565b60405161021b91906114cd565b60405180910390f35b61023e60048036038101906102399190610f28565b610817565b60405161024b919061150a565b60405180910390f35b61025c610848565b6040516102699190611525565b60405180910390f35b61028c60048036038101906102879190610eff565b61084f565b6040516102999190611664565b60405180910390f35b6102aa610875565b6040516102b79190611525565b60405180910390f35b6102da60048036038101906102d59190610fa0565b61088c565b005b6102f660048036038101906102f19190610f28565b610963565b005b610315604051610307906114b8565b604051809103902033610817565b610354576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034b906115c4565b60405180910390fd5b60648160ff161061039a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610391906115a4565b60405180910390fd5b6000600160009054906101000a900460ff16905081600160006101000a81548160ff021916908360ff1602179055507faf709979f6761875a7de96a106eb2d77e9a5653f6d6fffd45730779efe5012d881600160009054906101000a900460ff1660405161040992919061169a565b60405180910390a15050565b6000806000838152602001908152602001600020600201549050919050565b61045a600080848152602001908152602001600020600201546104556109d6565b610817565b610499576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049090611584565b60405180910390fd5b6104a382826109de565b5050565b6104af6109d6565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461051c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051390611644565b60405180910390fd5b6105268282610a71565b5050565b610547604051610539906114b8565b604051809103902033610817565b610586576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057d906115e4565b60405180910390fd5b60028282909180600181540180825580915050600190039060005260206000200160009091929091929091929091925091906105c3929190610dbc565b507fc2f8365fcbdb8943fca7627eeb06d2c090b1f5300bb61f2bc1bde607b59ab97182826040516105f5929190611540565b60405180910390a15050565b600160009054906101000a900460ff1681565b60606002805480602002602001604051908101604052809291908181526020016000905b828210156106f4578382906000526020600020018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106e05780601f106106b5576101008083540402835291602001916106e0565b820191906000526020600020905b8154815290600101906020018083116106c357829003601f168201915b505050505081526020019060010190610638565b50505050905090565b60606003805480602002602001604051908101604052809291908181526020016000905b828210156107dd578382906000526020600020018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107c95780601f1061079e576101008083540402835291602001916107c9565b820191906000526020600020905b8154815290600101906020018083116107ac57829003601f168201915b505050505081526020019060010190610721565b50505050905090565b600061080f82600080868152602001908152602001600020600001610b0490919063ffffffff16565b905092915050565b600061084082600080868152602001908152602001600020600001610b1e90919063ffffffff16565b905092915050565b6000801b81565b600061086e600080848152602001908152602001600020600001610b4e565b9050919050565b604051610881906114b8565b604051809103902081565b6108a960405161089b906114b8565b604051809103902033610817565b6108e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108df90611624565b60405180910390fd5b6003828290918060018154018082558091505060019003906000526020600020016000909192909192909192909192509190610925929190610dbc565b507f052805b5c84ff34234edd03b8ac9da8d65df8b1dc3ca9621d93a1228ae2471668282604051610957929190611540565b60405180910390a15050565b610989600080848152602001908152602001600020600201546109846109d6565b610817565b6109c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109bf90611604565b60405180910390fd5b6109d28282610a71565b5050565b600033905090565b610a0581600080858152602001908152602001600020600001610b6390919063ffffffff16565b15610a6d57610a126109d6565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b610a9881600080858152602001908152602001600020600001610b9390919063ffffffff16565b15610b0057610aa56109d6565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b6000610b138360000183610bc3565b60001c905092915050565b6000610b46836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610c30565b905092915050565b6000610b5c82600001610c53565b9050919050565b6000610b8b836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610c64565b905092915050565b6000610bbb836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610cd4565b905092915050565b600081836000018054905011610c0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0590611564565b60405180910390fd5b826000018281548110610c1d57fe5b9060005260206000200154905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b6000610c708383610c30565b610cc9578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050610cce565b600090505b92915050565b60008083600101600084815260200190815260200160002054905060008114610db05760006001820390506000600186600001805490500390506000866000018281548110610d1f57fe5b9060005260206000200154905080876000018481548110610d3c57fe5b9060005260206000200181905550600183018760010160008381526020019081526020016000208190555086600001805480610d7457fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610db6565b60009150505b92915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610dfd57803560ff1916838001178555610e2b565b82800160010185558215610e2b579182015b82811115610e2a578235825591602001919060010190610e0f565b5b509050610e389190610e3c565b5090565b610e5e91905b80821115610e5a576000816000905550600101610e42565b5090565b90565b600081359050610e70816117e6565b92915050565b600081359050610e85816117fd565b92915050565b60008083601f840112610e9d57600080fd5b8235905067ffffffffffffffff811115610eb657600080fd5b602083019150836001820283011115610ece57600080fd5b9250929050565b600081359050610ee481611814565b92915050565b600081359050610ef98161182b565b92915050565b600060208284031215610f1157600080fd5b6000610f1f84828501610e76565b91505092915050565b60008060408385031215610f3b57600080fd5b6000610f4985828601610e76565b9250506020610f5a85828601610e61565b9150509250929050565b60008060408385031215610f7757600080fd5b6000610f8585828601610e76565b9250506020610f9685828601610ed5565b9150509250929050565b60008060208385031215610fb357600080fd5b600083013567ffffffffffffffff811115610fcd57600080fd5b610fd985828601610e8b565b92509250509250929050565b600060208284031215610ff757600080fd5b600061100584828501610eea565b91505092915050565b600061101a83836110f1565b905092915050565b61102b81611734565b82525050565b600061103c826116d3565b61104681856116f6565b935083602082028501611058856116c3565b8060005b858110156110945784840389528151611075858261100e565b9450611080836116e9565b925060208a0199505060018101905061105c565b50829750879550505050505092915050565b6110af81611746565b82525050565b6110be81611752565b82525050565b60006110d08385611718565b93506110dd838584611793565b6110e6836117d5565b840190509392505050565b60006110fc826116de565b6111068185611707565b93506111168185602086016117a2565b61111f816117d5565b840191505092915050565b6000611137602283611718565b91507f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e60008301527f64730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061119d602f83611718565b91507f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008301527f2061646d696e20746f206772616e7400000000000000000000000000000000006020830152604082019050919050565b6000611203604083611718565b91507f476f7665726e616e63654465636973696f6e733a3a7365744d61726b6574706c60008301527f61636546656520666565206d757374206265206c657373207468616e203130306020830152604082019050919050565b6000611269603783611718565b91507f476f7665726e616e63654465636973696f6e733a3a7365744d61726b6574706c60008301527f6163654665652041434345535320464f5242494444454e0000000000000000006020830152604082019050919050565b60006112cf603c83611718565b91507f476f7665726e616e63654465636973696f6e733a3a6164644d61726b6574706c60008301527f61636543617465676f72792041434345535320464f5242494444454e000000006020830152604082019050919050565b6000611335603083611718565b91507f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008301527f2061646d696e20746f207265766f6b65000000000000000000000000000000006020830152604082019050919050565b600061139b600d83611729565b91507f474f5645524e4f525f524f4c45000000000000000000000000000000000000006000830152600d82019050919050565b60006113db603983611718565b91507f476f7665726e616e63654465636973696f6e733a3a616464466f756e6461746960008301527f6f6e4d656d6265722041434345535320464f5242494444454e000000000000006020830152604082019050919050565b6000611441602f83611718565b91507f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008301527f20726f6c657320666f722073656c6600000000000000000000000000000000006020830152604082019050919050565b6114a38161177c565b82525050565b6114b281611786565b82525050565b60006114c38261138e565b9150819050919050565b60006020820190506114e26000830184611022565b92915050565b600060208201905081810360008301526115028184611031565b905092915050565b600060208201905061151f60008301846110a6565b92915050565b600060208201905061153a60008301846110b5565b92915050565b6000602082019050818103600083015261155b8184866110c4565b90509392505050565b6000602082019050818103600083015261157d8161112a565b9050919050565b6000602082019050818103600083015261159d81611190565b9050919050565b600060208201905081810360008301526115bd816111f6565b9050919050565b600060208201905081810360008301526115dd8161125c565b9050919050565b600060208201905081810360008301526115fd816112c2565b9050919050565b6000602082019050818103600083015261161d81611328565b9050919050565b6000602082019050818103600083015261163d816113ce565b9050919050565b6000602082019050818103600083015261165d81611434565b9050919050565b6000602082019050611679600083018461149a565b92915050565b600060208201905061169460008301846114a9565b92915050565b60006040820190506116af60008301856114a9565b6116bc60208301846114a9565b9392505050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061173f8261175c565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b838110156117c05780820151818401526020810190506117a5565b838111156117cf576000848401525b50505050565b6000601f19601f8301169050919050565b6117ef81611734565b81146117fa57600080fd5b50565b61180681611752565b811461181157600080fd5b50565b61181d8161177c565b811461182857600080fd5b50565b61183481611786565b811461183f57600080fd5b5056fea264697066735822122054ae6fbf3a59593c851af5f78761ae8a52bc2cf9a40c6e478c644bab442a51fe64736f6c63430006070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c80637840c6a411610097578063ca15c87311610066578063ca15c87314610272578063ccc57490146102a2578063cd80dc8d146102c0578063d547741f146102dc576100f5565b80637840c6a4146101d65780639010d07c146101f457806391d1485414610224578063a217fddf14610254576100f5565b806336568abe116100d357806336568abe146101625780634320a9881461017e5780636a1669641461019a57806375945ce8146101b8576100f5565b80631c55b8f8146100fa578063248a9ca3146101165780632f2ff15d14610146575b600080fd5b610114600480360381019061010f9190610fe5565b6102f8565b005b610130600480360381019061012b9190610eff565b610415565b60405161013d9190611525565b60405180910390f35b610160600480360381019061015b9190610f28565b610434565b005b61017c60048036038101906101779190610f28565b6104a7565b005b61019860048036038101906101939190610fa0565b61052a565b005b6101a2610601565b6040516101af919061167f565b60405180910390f35b6101c0610614565b6040516101cd91906114e8565b60405180910390f35b6101de6106fd565b6040516101eb91906114e8565b60405180910390f35b61020e60048036038101906102099190610f64565b6107e6565b60405161021b91906114cd565b60405180910390f35b61023e60048036038101906102399190610f28565b610817565b60405161024b919061150a565b60405180910390f35b61025c610848565b6040516102699190611525565b60405180910390f35b61028c60048036038101906102879190610eff565b61084f565b6040516102999190611664565b60405180910390f35b6102aa610875565b6040516102b79190611525565b60405180910390f35b6102da60048036038101906102d59190610fa0565b61088c565b005b6102f660048036038101906102f19190610f28565b610963565b005b610315604051610307906114b8565b604051809103902033610817565b610354576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034b906115c4565b60405180910390fd5b60648160ff161061039a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610391906115a4565b60405180910390fd5b6000600160009054906101000a900460ff16905081600160006101000a81548160ff021916908360ff1602179055507faf709979f6761875a7de96a106eb2d77e9a5653f6d6fffd45730779efe5012d881600160009054906101000a900460ff1660405161040992919061169a565b60405180910390a15050565b6000806000838152602001908152602001600020600201549050919050565b61045a600080848152602001908152602001600020600201546104556109d6565b610817565b610499576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049090611584565b60405180910390fd5b6104a382826109de565b5050565b6104af6109d6565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461051c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051390611644565b60405180910390fd5b6105268282610a71565b5050565b610547604051610539906114b8565b604051809103902033610817565b610586576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057d906115e4565b60405180910390fd5b60028282909180600181540180825580915050600190039060005260206000200160009091929091929091929091925091906105c3929190610dbc565b507fc2f8365fcbdb8943fca7627eeb06d2c090b1f5300bb61f2bc1bde607b59ab97182826040516105f5929190611540565b60405180910390a15050565b600160009054906101000a900460ff1681565b60606002805480602002602001604051908101604052809291908181526020016000905b828210156106f4578382906000526020600020018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106e05780601f106106b5576101008083540402835291602001916106e0565b820191906000526020600020905b8154815290600101906020018083116106c357829003601f168201915b505050505081526020019060010190610638565b50505050905090565b60606003805480602002602001604051908101604052809291908181526020016000905b828210156107dd578382906000526020600020018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107c95780601f1061079e576101008083540402835291602001916107c9565b820191906000526020600020905b8154815290600101906020018083116107ac57829003601f168201915b505050505081526020019060010190610721565b50505050905090565b600061080f82600080868152602001908152602001600020600001610b0490919063ffffffff16565b905092915050565b600061084082600080868152602001908152602001600020600001610b1e90919063ffffffff16565b905092915050565b6000801b81565b600061086e600080848152602001908152602001600020600001610b4e565b9050919050565b604051610881906114b8565b604051809103902081565b6108a960405161089b906114b8565b604051809103902033610817565b6108e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108df90611624565b60405180910390fd5b6003828290918060018154018082558091505060019003906000526020600020016000909192909192909192909192509190610925929190610dbc565b507f052805b5c84ff34234edd03b8ac9da8d65df8b1dc3ca9621d93a1228ae2471668282604051610957929190611540565b60405180910390a15050565b610989600080848152602001908152602001600020600201546109846109d6565b610817565b6109c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109bf90611604565b60405180910390fd5b6109d28282610a71565b5050565b600033905090565b610a0581600080858152602001908152602001600020600001610b6390919063ffffffff16565b15610a6d57610a126109d6565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b610a9881600080858152602001908152602001600020600001610b9390919063ffffffff16565b15610b0057610aa56109d6565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b6000610b138360000183610bc3565b60001c905092915050565b6000610b46836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610c30565b905092915050565b6000610b5c82600001610c53565b9050919050565b6000610b8b836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610c64565b905092915050565b6000610bbb836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610cd4565b905092915050565b600081836000018054905011610c0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0590611564565b60405180910390fd5b826000018281548110610c1d57fe5b9060005260206000200154905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b6000610c708383610c30565b610cc9578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050610cce565b600090505b92915050565b60008083600101600084815260200190815260200160002054905060008114610db05760006001820390506000600186600001805490500390506000866000018281548110610d1f57fe5b9060005260206000200154905080876000018481548110610d3c57fe5b9060005260206000200181905550600183018760010160008381526020019081526020016000208190555086600001805480610d7457fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610db6565b60009150505b92915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610dfd57803560ff1916838001178555610e2b565b82800160010185558215610e2b579182015b82811115610e2a578235825591602001919060010190610e0f565b5b509050610e389190610e3c565b5090565b610e5e91905b80821115610e5a576000816000905550600101610e42565b5090565b90565b600081359050610e70816117e6565b92915050565b600081359050610e85816117fd565b92915050565b60008083601f840112610e9d57600080fd5b8235905067ffffffffffffffff811115610eb657600080fd5b602083019150836001820283011115610ece57600080fd5b9250929050565b600081359050610ee481611814565b92915050565b600081359050610ef98161182b565b92915050565b600060208284031215610f1157600080fd5b6000610f1f84828501610e76565b91505092915050565b60008060408385031215610f3b57600080fd5b6000610f4985828601610e76565b9250506020610f5a85828601610e61565b9150509250929050565b60008060408385031215610f7757600080fd5b6000610f8585828601610e76565b9250506020610f9685828601610ed5565b9150509250929050565b60008060208385031215610fb357600080fd5b600083013567ffffffffffffffff811115610fcd57600080fd5b610fd985828601610e8b565b92509250509250929050565b600060208284031215610ff757600080fd5b600061100584828501610eea565b91505092915050565b600061101a83836110f1565b905092915050565b61102b81611734565b82525050565b600061103c826116d3565b61104681856116f6565b935083602082028501611058856116c3565b8060005b858110156110945784840389528151611075858261100e565b9450611080836116e9565b925060208a0199505060018101905061105c565b50829750879550505050505092915050565b6110af81611746565b82525050565b6110be81611752565b82525050565b60006110d08385611718565b93506110dd838584611793565b6110e6836117d5565b840190509392505050565b60006110fc826116de565b6111068185611707565b93506111168185602086016117a2565b61111f816117d5565b840191505092915050565b6000611137602283611718565b91507f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e60008301527f64730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061119d602f83611718565b91507f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008301527f2061646d696e20746f206772616e7400000000000000000000000000000000006020830152604082019050919050565b6000611203604083611718565b91507f476f7665726e616e63654465636973696f6e733a3a7365744d61726b6574706c60008301527f61636546656520666565206d757374206265206c657373207468616e203130306020830152604082019050919050565b6000611269603783611718565b91507f476f7665726e616e63654465636973696f6e733a3a7365744d61726b6574706c60008301527f6163654665652041434345535320464f5242494444454e0000000000000000006020830152604082019050919050565b60006112cf603c83611718565b91507f476f7665726e616e63654465636973696f6e733a3a6164644d61726b6574706c60008301527f61636543617465676f72792041434345535320464f5242494444454e000000006020830152604082019050919050565b6000611335603083611718565b91507f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008301527f2061646d696e20746f207265766f6b65000000000000000000000000000000006020830152604082019050919050565b600061139b600d83611729565b91507f474f5645524e4f525f524f4c45000000000000000000000000000000000000006000830152600d82019050919050565b60006113db603983611718565b91507f476f7665726e616e63654465636973696f6e733a3a616464466f756e6461746960008301527f6f6e4d656d6265722041434345535320464f5242494444454e000000000000006020830152604082019050919050565b6000611441602f83611718565b91507f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008301527f20726f6c657320666f722073656c6600000000000000000000000000000000006020830152604082019050919050565b6114a38161177c565b82525050565b6114b281611786565b82525050565b60006114c38261138e565b9150819050919050565b60006020820190506114e26000830184611022565b92915050565b600060208201905081810360008301526115028184611031565b905092915050565b600060208201905061151f60008301846110a6565b92915050565b600060208201905061153a60008301846110b5565b92915050565b6000602082019050818103600083015261155b8184866110c4565b90509392505050565b6000602082019050818103600083015261157d8161112a565b9050919050565b6000602082019050818103600083015261159d81611190565b9050919050565b600060208201905081810360008301526115bd816111f6565b9050919050565b600060208201905081810360008301526115dd8161125c565b9050919050565b600060208201905081810360008301526115fd816112c2565b9050919050565b6000602082019050818103600083015261161d81611328565b9050919050565b6000602082019050818103600083015261163d816113ce565b9050919050565b6000602082019050818103600083015261165d81611434565b9050919050565b6000602082019050611679600083018461149a565b92915050565b600060208201905061169460008301846114a9565b92915050565b60006040820190506116af60008301856114a9565b6116bc60208301846114a9565b9392505050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061173f8261175c565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b838110156117c05780820151818401526020810190506117a5565b838111156117cf576000848401525b50505050565b6000601f19601f8301169050919050565b6117ef81611734565b81146117fa57600080fd5b50565b61180681611752565b811461181157600080fd5b50565b61181d8161177c565b811461182857600080fd5b50565b61183481611786565b811461183f57600080fd5b5056fea264697066735822122054ae6fbf3a59593c851af5f78761ae8a52bc2cf9a40c6e478c644bab442a51fe64736f6c63430006070033",
  "devdoc": {
    "methods": {
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}.     * To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive.     * Role bearers are not sorted in any particular way, and their ordering may change at any point.     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`.     * If `account` had not been already granted `role`, emits a {RoleGranted} event.     * Requirements:     * - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account.     * Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced).     * If the calling account had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`.     * If `account` had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must have ``role``'s admin role."
      }
    }
  },
  "userdoc": {
    "methods": {}
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 22,
        "contract": "contracts/GovernanceDecisions.sol:GovernanceDecisions",
        "label": "_roles",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_bytes32,t_struct(RoleData)18_storage)"
      },
      {
        "astId": 1106,
        "contract": "contracts/GovernanceDecisions.sol:GovernanceDecisions",
        "label": "marketplaceFee",
        "offset": 0,
        "slot": "1",
        "type": "t_uint8"
      },
      {
        "astId": 1109,
        "contract": "contracts/GovernanceDecisions.sol:GovernanceDecisions",
        "label": "marketplaceCategories",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 1112,
        "contract": "contracts/GovernanceDecisions.sol:GovernanceDecisions",
        "label": "foundationMemberships",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_string_storage)dyn_storage"
      }
    ],
    "types": {
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_bytes32,t_struct(RoleData)18_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct AccessControl.RoleData)",
        "numberOfBytes": "32",
        "value": "t_struct(RoleData)18_storage"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(AddressSet)877_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableSet.AddressSet",
        "members": [
          {
            "astId": 876,
            "contract": "contracts/GovernanceDecisions.sol:GovernanceDecisions",
            "label": "_inner",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Set)612_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(RoleData)18_storage": {
        "encoding": "inplace",
        "label": "struct AccessControl.RoleData",
        "members": [
          {
            "astId": 15,
            "contract": "contracts/GovernanceDecisions.sol:GovernanceDecisions",
            "label": "members",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(AddressSet)877_storage"
          },
          {
            "astId": 17,
            "contract": "contracts/GovernanceDecisions.sol:GovernanceDecisions",
            "label": "adminRole",
            "offset": 0,
            "slot": "2",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(Set)612_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableSet.Set",
        "members": [
          {
            "astId": 607,
            "contract": "contracts/GovernanceDecisions.sol:GovernanceDecisions",
            "label": "_values",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 611,
            "contract": "contracts/GovernanceDecisions.sol:GovernanceDecisions",
            "label": "_indexes",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_uint256)"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}